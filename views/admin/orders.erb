<!-- Order Management Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h3 mb-1">Order Management</h1>
        <p class="text-muted mb-0">Manage customer orders, payments, and fulfillment</p>
    </div>
    <div>
        <a href="/admin/licenses/generate" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Manual License
        </a>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row g-4 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="stat-card">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <div class="stat-number text-primary"><%= @total_orders %></div>
                    <div class="stat-label">Total Orders</div>
                </div>
                <div class="text-primary">
                    <i class="fas fa-shopping-cart fa-2x"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="stat-card">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <div class="stat-number text-success"><%= Order.where(status: 'completed').count %></div>
                    <div class="stat-label">Completed</div>
                </div>
                <div class="text-success">
                    <i class="fas fa-check-circle fa-2x"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="stat-card">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <div class="stat-number text-warning"><%= Order.where(status: 'pending').count %></div>
                    <div class="stat-label">Pending</div>
                </div>
                <div class="text-warning">
                    <i class="fas fa-clock fa-2x"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6">
        <div class="stat-card">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <div class="stat-number text-info"><%= format_currency(Order.where(status: 'completed').sum(:amount) || 0) %></div>
                    <div class="stat-label">Total Revenue</div>
                </div>
                <div class="text-info">
                    <i class="fas fa-dollar-sign fa-2x"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filter and Search -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="input-group">
            <span class="input-group-text">
                <i class="fas fa-search"></i>
            </span>
            <input type="text" class="form-control" placeholder="Search orders, emails, customers..."
                   id="orderSearch" value="<%= h(params[:search] || '') %>" autocomplete="off">
        </div>
    </div>
    <div class="col-md-8">
        <div class="d-flex gap-2">
            <select class="form-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="pending" <%= 'selected' if params[:status] == 'pending' %>>Pending</option>
                <option value="completed" <%= 'selected' if params[:status] == 'completed' %>>Completed</option>
                <option value="failed" <%= 'selected' if params[:status] == 'failed' %>>Failed</option>
                <option value="refunded" <%= 'selected' if params[:status] == 'refunded' %>>Refunded</option>
            </select>
            <select class="form-select" id="paymentMethodFilter">
                <option value="">All Payment Methods</option>
                <option value="stripe" <%= 'selected' if params[:payment_method] == 'stripe' %>>Stripe</option>
                <option value="paypal" <%= 'selected' if params[:payment_method] == 'paypal' %>>PayPal</option>
                <option value="free" <%= 'selected' if params[:payment_method] == 'free' %>>Free</option>
                <option value="manual" <%= 'selected' if params[:payment_method] == 'manual' %>>Manual</option>
            </select>
            <select class="form-select" id="dateFilter">
                <option value="">All Time</option>
                <option value="today" <%= 'selected' if params[:date_filter] == 'today' %>>Today</option>
                <option value="week" <%= 'selected' if params[:date_filter] == 'week' %>>This Week</option>
                <option value="month" <%= 'selected' if params[:date_filter] == 'month' %>>This Month</option>
                <option value="year" <%= 'selected' if params[:date_filter] == 'year' %>>This Year</option>
            </select>
            <select class="form-select" id="perPageFilter">
                <option value="25" <%= 'selected' if @per_page == 25 %>>25 per page</option>
                <option value="50" <%= 'selected' if @per_page == 50 %>>50 per page</option>
                <option value="100" <%= 'selected' if @per_page == 100 %>>100 per page</option>
            </select>
        </div>
    </div>
</div>

<!-- Bulk Actions Toolbar (initially hidden) -->
<div id="bulkActionsToolbar" class="bulk-actions-toolbar mb-3" style="display: none;">
    <div class="d-flex justify-content-between align-items-center">
        <div class="bulk-actions-info">
            <span id="selectedCount">0</span> orders selected
        </div>
        <div class="bulk-actions-buttons">
            <button class="btn btn-success btn-sm me-2" onclick="bulkComplete()">
                <i class="fas fa-check me-1"></i>Complete
            </button>
            <button class="btn btn-warning btn-sm me-2" onclick="bulkRefund()">
                <i class="fas fa-undo me-1"></i>Refund
            </button>
            <button class="btn btn-danger btn-sm me-2" onclick="bulkDelete()">
                <i class="fas fa-trash me-1"></i>Delete
            </button>
            <button class="btn btn-info btn-sm me-2" onclick="bulkExport()">
                <i class="fas fa-download me-1"></i>Export Selected
            </button>
            <button class="btn btn-secondary btn-sm" onclick="clearSelection()">
                <i class="fas fa-times me-1"></i>Clear Selection
            </button>
        </div>
    </div>
</div>

<!-- Orders Table -->
<div class="data-table">
    <h5 class="table-header">
        <i class="fas fa-shopping-cart me-2"></i>
        Orders
        <% if @total_orders > @per_page %>
        <small class="text-muted ms-2">
            (Showing <%= [(@current_page - 1) * @per_page + 1, @total_orders].min %>-<%= [@current_page * @per_page, @total_orders].min %> of <%= @total_orders %>)
        </small>
        <% end %>
    </h5>

    <div class="table-responsive orders-table-container">
        <% if @orders.any? %>
        <table class="table table-hover table-dark mb-0" id="ordersTable">
            <thead>
                <tr>
                    <th width="40">
                        <input type="checkbox" id="selectAll" class="form-check-input">
                    </th>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th>Payment Method</th>
                    <th>Items</th>
                    <th>Created</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% @orders.each do |order| %>
                <tr class="order-row"
                    data-status="<%= order.status %>"
                    data-payment-method="<%= order.payment_method %>"
                    data-customer="<%= h(order.email.downcase) %>">
                    <td>
                        <input type="checkbox" class="form-check-input order-checkbox"
                               value="<%= order.id %>" data-order-id="<%= order.id %>">
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="order-icon me-3">
                                <%= order_status_icon(order.status) %>
                            </div>
                            <div>
                                <div class="fw-bold text-primary">
                                    <a href="/admin/orders/<%= order.id %>" class="text-decoration-none">
                                        #<%= order.id %>
                                    </a>
                                </div>
                                <% if order.payment_intent_id %>
                                <small class="text-muted font-monospace">
                                    <%= truncate(order.payment_intent_id, 20) %>
                                </small>
                                <% end %>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div>
                            <div class="fw-bold">
                                <%= h(order.customer_name || order.email.split('@').first.capitalize) %>
                            </div>
                            <small class="text-muted">
                                <a href="mailto:<%= h(order.email) %>" class="text-decoration-none">
                                    <%= h(order.email) %>
                                </a>
                            </small>
                        </div>
                    </td>
                    <td>
                        <div class="fw-bold">
                            <%= format_currency(order.amount, order.currency) %>
                        </div>
                        <small class="text-muted">
                            <%= order.currency.upcase %>
                        </small>
                    </td>
                    <td>
                        <%= status_badge(order.status) %>
                        <% if order.completed_at %>
                        <br><small class="text-success">
                            <i class="fas fa-check me-1"></i>
                            Completed <%= time_ago(order.completed_at) %>
                        </small>
                        <% elsif order.refunded_at %>
                        <br><small class="text-warning">
                            <i class="fas fa-undo me-1"></i>
                            Refunded <%= time_ago(order.refunded_at) %>
                        </small>
                        <% end %>
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <%= payment_method_icon(order.payment_method) %>
                            <span class="ms-2">
                                <%= order.payment_method.capitalize %>
                            </span>
                        </div>
                    </td>
                    <td>
                        <div>
                            <% if order.order_items.any? %>
                            <div class="fw-bold">
                                <%= order.order_items.count %> item(s)
                            </div>
                            <small class="text-muted">
                                <% order.order_items.first(2).each do |item| %>
                                    <div>
                                        <%= h(item.product&.name || 'Unknown Product') %>
                                        <% if item.quantity > 1 %>
                                        (×<%= item.quantity %>)
                                        <% end %>
                                    </div>
                                <% end %>
                                <% if order.order_items.count > 2 %>
                                <div>... and <%= order.order_items.count - 2 %> more</div>
                                <% end %>
                            </small>
                            <% else %>
                            <span class="text-muted">No items</span>
                            <% end %>
                        </div>
                    </td>
                    <td>
                        <div class="text-muted">
                            <%= format_date(order.created_at, :short) %>
                        </div>
                        <small class="text-muted">
                            <%= time_ago(order.created_at) %>
                        </small>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <a href="/admin/orders/<%= order.id %>"
                               class="btn btn-outline-primary"
                               title="View Details">
                                <i class="fas fa-eye"></i>
                            </a>
                            <% if order.pending? %>
                            <button class="btn btn-outline-success"
                                    onclick="updateOrderStatus(<%= order.id %>, 'completed')"
                                    title="Mark as Completed">
                                <i class="fas fa-check"></i>
                            </button>
                            <% elsif order.completed? %>
                            <button class="btn btn-outline-warning"
                                    onclick="updateOrderStatus(<%= order.id %>, 'refunded')"
                                    title="Refund Order">
                                <i class="fas fa-undo"></i>
                            </button>
                            <% end %>
                            <div class="dropdown">
                                <button class="btn btn-outline-secondary dropdown-toggle"
                                        data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="mailto:<%= h(order.email) %>?subject=Regarding Order #<%= order.id %>">
                                            <i class="fas fa-envelope me-2"></i>Email Customer
                                        </a>
                                    </li>
                                    <% if order.licenses.any? %>
                                    <li>
                                        <a class="dropdown-item" href="/admin/licenses?search=<%= u(order.email) %>">
                                            <i class="fas fa-key me-2"></i>View Licenses
                                        </a>
                                    </li>
                                    <% end %>
                                    <li><hr class="dropdown-divider"></li>
                                    <% if order.pending? || order.failed? %>
                                    <li>
                                        <button class="dropdown-item text-danger"
                                                onclick="deleteOrder(<%= order.id %>)">
                                            <i class="fas fa-trash me-2"></i>Delete Order
                                        </button>
                                    </li>
                                    <% end %>
                                </ul>
                            </div>
                        </div>
                    </td>
                </tr>
                <% end %>
            </tbody>
        </table>
        <% else %>
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart text-muted mb-3" style="font-size: 3rem;"></i>
            <h5 class="text-muted">No Orders Found</h5>
            <p class="text-muted mb-4">
                <% if params[:search] || params[:status] || params[:payment_method] || params[:date_filter] %>
                No orders match your current filters. Try adjusting your search criteria.
                <% else %>
                Orders will appear here when customers make purchases.
                <% end %>
            </p>
            <% if params[:search] || params[:status] || params[:payment_method] || params[:date_filter] %>
            <button class="btn btn-secondary" onclick="clearFilters()">
                <i class="fas fa-times me-2"></i>Clear Filters
            </button>
            <% end %>
        </div>
        <% end %>
    </div>

    <!-- Pagination -->
    <% if @total_pages > 1 %>
    <div class="card-footer" style="background: var(--surface-tertiary); border-top: 1px solid var(--border-default);">
        <div class="d-flex justify-content-between align-items-center">
            <small class="text-muted">
                Showing <%= [(@current_page - 1) * @per_page + 1, @total_orders].min %>-<%= [@current_page * @per_page, @total_orders].min %> of <%= @total_orders %> orders
            </small>

            <nav>
                <ul class="pagination pagination-sm mb-0">
                    <!-- Previous button -->
                    <% if @current_page > 1 %>
                    <li class="page-item">
                        <a class="page-link" href="<%= build_pagination_url(@current_page - 1) %>">Previous</a>
                    </li>
                    <% else %>
                    <li class="page-item disabled">
                        <span class="page-link">Previous</span>
                    </li>
                    <% end %>

                    <!-- Page numbers -->
                    <%
                    start_page = [@current_page - 2, 1].max
                    end_page = [start_page + 4, @total_pages].min
                    start_page = [end_page - 4, 1].max if end_page - start_page < 4
                    %>

                    <% if start_page > 1 %>
                    <li class="page-item">
                        <a class="page-link" href="<%= build_pagination_url(1) %>">1</a>
                    </li>
                    <% if start_page > 2 %>
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                    <% end %>
                    <% end %>

                    <% (start_page..end_page).each do |page| %>
                    <% if page == @current_page %>
                    <li class="page-item active">
                        <span class="page-link"><%= page %></span>
                    </li>
                    <% else %>
                    <li class="page-item">
                        <a class="page-link" href="<%= build_pagination_url(page) %>"><%= page %></a>
                    </li>
                    <% end %>
                    <% end %>

                    <% if end_page < @total_pages %>
                    <% if end_page < @total_pages - 1 %>
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                    <% end %>
                    <li class="page-item">
                        <a class="page-link" href="<%= build_pagination_url(@total_pages) %>"><%= @total_pages %></a>
                    </li>
                    <% end %>

                    <!-- Next button -->
                    <% if @current_page < @total_pages %>
                    <li class="page-item">
                        <a class="page-link" href="<%= build_pagination_url(@current_page + 1) %>">Next</a>
                    </li>
                    <% else %>
                    <li class="page-item disabled">
                        <span class="page-link">Next</span>
                    </li>
                    <% end %>
                </ul>
            </nav>

            <div class="btn-group btn-group-sm">
                <button class="btn btn-outline-secondary" onclick="exportOrders()">
                    <i class="fas fa-download me-1"></i>Export All
                </button>
            </div>
        </div>
    </div>
    <% elsif @orders.any? %>
    <div class="card-footer" style="background: var(--surface-tertiary); border-top: 1px solid var(--border-default);">
        <div class="d-flex justify-content-between align-items-center">
            <small class="text-muted">
                Showing all <%= @total_orders %> orders
            </small>
            <div class="btn-group btn-group-sm">
                <button class="btn btn-outline-secondary" onclick="exportOrders()">
                    <i class="fas fa-download me-1"></i>Export All
                </button>
            </div>
        </div>
    </div>
    <% end %>
</div>

<!-- Order Management JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('orderSearch');
    const statusFilter = document.getElementById('statusFilter');
    const paymentMethodFilter = document.getElementById('paymentMethodFilter');
    const dateFilter = document.getElementById('dateFilter');
    const perPageFilter = document.getElementById('perPageFilter');
    const selectAllCheckbox = document.getElementById('selectAll');
    const orderCheckboxes = document.querySelectorAll('.order-checkbox');
    const bulkToolbar = document.getElementById('bulkActionsToolbar');
    const selectedCountElement = document.getElementById('selectedCount');

    // Build pagination URL helper
    window.buildPaginationUrl = function(page) {
        const params = new URLSearchParams(window.location.search);
        params.set('page', page);
        return '?' + params.toString();
    };

    // Filter functionality
    function applyFilters() {
        const params = new URLSearchParams();

        const search = searchInput.value.trim();
        const status = statusFilter.value;
        const paymentMethod = paymentMethodFilter.value;
        const dateRange = dateFilter.value;
        const perPage = perPageFilter.value;

        if (search) params.set('search', search);
        if (status) params.set('status', status);
        if (paymentMethod) params.set('payment_method', paymentMethod);
        if (dateRange) params.set('date_filter', dateRange);
        if (perPage !== '50') params.set('per_page', perPage);

        const url = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
        window.location.href = url;
    }

    // Clear filters
    window.clearFilters = function() {
        window.location.href = window.location.pathname;
    };

    // Debounced search
    let searchTimeout;
    if (searchInput) {
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(applyFilters, 500);
        });
    }

    // Filter change handlers
    if (statusFilter) statusFilter.addEventListener('change', applyFilters);
    if (paymentMethodFilter) paymentMethodFilter.addEventListener('change', applyFilters);
    if (dateFilter) dateFilter.addEventListener('change', applyFilters);
    if (perPageFilter) perPageFilter.addEventListener('change', applyFilters);

    // Bulk selection functionality
    function updateBulkSelection() {
        const checkedBoxes = Array.from(orderCheckboxes).filter(cb => cb.checked);

        // Update select all checkbox state
        if (checkedBoxes.length === 0) {
            selectAllCheckbox.indeterminate = false;
            selectAllCheckbox.checked = false;
        } else if (checkedBoxes.length === orderCheckboxes.length) {
            selectAllCheckbox.indeterminate = false;
            selectAllCheckbox.checked = true;
        } else {
            selectAllCheckbox.indeterminate = true;
            selectAllCheckbox.checked = false;
        }

        // Show/hide bulk actions toolbar
        if (checkedBoxes.length > 0) {
            bulkToolbar.style.display = 'block';
            selectedCountElement.textContent = checkedBoxes.length;
        } else {
            bulkToolbar.style.display = 'none';
        }
    }

    // Select all checkbox handler
    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            orderCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateBulkSelection();
        });
    }

    // Individual checkbox handlers
    orderCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateBulkSelection);
    });
});

// Get selected order IDs
function getSelectedOrderIds() {
    return Array.from(document.querySelectorAll('.order-checkbox:checked')).map(cb => cb.value);
}

// Clear selection
function clearSelection() {
    document.querySelectorAll('.order-checkbox').forEach(cb => cb.checked = false);
    document.getElementById('selectAll').checked = false;
    document.getElementById('selectAll').indeterminate = false;
    document.getElementById('bulkActionsToolbar').style.display = 'none';
}

// Bulk complete orders
function bulkComplete() {
    const orderIds = getSelectedOrderIds();

    if (orderIds.length === 0) {
        alert('Please select orders to complete.');
        return;
    }

    if (confirm(`Are you sure you want to mark ${orderIds.length} selected orders as completed?\n\nThis will generate licenses for pending orders.`)) {
        performBulkAction('complete', orderIds);
    }
}

// Bulk refund orders
function bulkRefund() {
    const orderIds = getSelectedOrderIds();

    if (orderIds.length === 0) {
        alert('Please select orders to refund.');
        return;
    }

    if (confirm(`⚠️ Are you sure you want to refund ${orderIds.length} selected orders?\n\nThis will refund the orders and revoke any associated licenses!`)) {
        performBulkAction('refund', orderIds);
    }
}

// Bulk delete orders
function bulkDelete() {
    const orderIds = getSelectedOrderIds();

    if (orderIds.length === 0) {
        alert('Please select orders to delete.');
        return;
    }

    if (confirm(`⚠️ WARNING: Are you sure you want to DELETE ${orderIds.length} selected orders?\n\nThis will permanently remove the orders and any associated data!\nThis action CANNOT be undone!`)) {
        performBulkAction('delete', orderIds);
    }
}

// Bulk export orders
function bulkExport() {
    const orderIds = getSelectedOrderIds();

    if (orderIds.length === 0) {
        alert('Please select orders to export.');
        return;
    }

    const params = new URLSearchParams({ order_ids: orderIds.join(',') });
    window.location.href = `/admin/orders/export?${params.toString()}`;
}

// Perform bulk action
function performBulkAction(action, orderIds) {
    const loadingText = action === 'complete' ? 'Completing...' :
                       action === 'refund' ? 'Refunding...' : 'Deleting...';

    // Show loading state
    const toolbar = document.getElementById('bulkActionsToolbar');
    const originalHTML = toolbar.innerHTML;
    toolbar.innerHTML = `<div class="d-flex align-items-center"><div class="spinner-border spinner-border-sm me-2"></div>${loadingText}</div>`;

    fetch('/admin/orders/bulk-action', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({
            action: action,
            order_ids: orderIds
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            if (data.results) {
                let message = `Bulk ${action} completed:\n`;
                message += `✓ Success: ${data.results.success || 0}\n`;
                if (data.results.failed > 0) {
                    message += `✗ Failed: ${data.results.failed}\n`;
                    if (data.results.errors && data.results.errors.length > 0) {
                        message += `\nErrors:\n${data.results.errors.slice(0, 3).join('\n')}`;
                        if (data.results.errors.length > 3) {
                            message += `\n... and ${data.results.errors.length - 3} more`;
                        }
                    }
                }
                alert(message);
            }
            location.reload();
        } else {
            alert('Error: ' + (data.error || 'Unknown error occurred'));
            toolbar.innerHTML = originalHTML;
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while performing the bulk action.');
        toolbar.innerHTML = originalHTML;
    });
}

// Update order status
function updateOrderStatus(orderId, newStatus) {
    const confirmText = newStatus === 'completed' ?
        'Are you sure you want to mark this order as completed? This will generate licenses if not already done.' :
        newStatus === 'refunded' ?
        'Are you sure you want to refund this order? This will revoke any associated licenses.' :
        `Are you sure you want to update this order status to ${newStatus}?`;

    if (confirm(confirmText)) {
        fetch(`/admin/orders/${orderId}/update-status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ status: newStatus })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Error: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while updating the order status.');
        });
    }
}

// Delete order
function deleteOrder(orderId) {
    if (confirm('Are you sure you want to delete this order? This action cannot be undone.')) {
        performBulkAction('delete', [orderId]);
    }
}

// Export orders
function exportOrders() {
    window.location.href = '/admin/orders/export';
}

// Stat card click handlers
document.querySelectorAll('.stat-card').forEach(card => {
    card.style.cursor = 'pointer';
    card.addEventListener('click', function() {
        const label = this.querySelector('.stat-label').textContent.toLowerCase();
        const statusFilter = document.getElementById('statusFilter');

        // Reset filters
        statusFilter.value = '';

        switch(label) {
            case 'completed':
                statusFilter.value = 'completed';
                break;
            case 'pending':
                statusFilter.value = 'pending';
                break;
        }

        // Trigger filter
        if (statusFilter.value) {
            statusFilter.dispatchEvent(new Event('change'));
        }
    });
});
</script>

<!-- Custom Styles -->
<style>
.order-icon {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.1rem;
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

.btn-group-sm .btn {
    padding: 0.25rem 0.5rem;
}

.order-row:hover {
    background-color: var(--surface-tertiary);
}

.table th {
    border-bottom: 2px solid var(--border-default);
    font-weight: 600;
    color: var(--text-primary);
}

.dropdown-menu {
    background: var(--surface-secondary);
    border: 1px solid var(--border-default);
}

.dropdown-item {
    color: var(--text-primary);
}

.dropdown-item:hover {
    background: var(--surface-tertiary);
    color: var(--accent-primary);
}

/* Bulk Actions Toolbar */
.bulk-actions-toolbar {
    background: var(--surface-secondary);
    border: 1px solid var(--accent-primary);
    border-radius: 8px;
    padding: 1rem;
    box-shadow: var(--shadow);
    animation: slideInDown 0.3s ease-out;
}

.bulk-actions-info {
    color: var(--text-primary);
    font-weight: 500;
}

.bulk-actions-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

@keyframes slideInDown {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Selected row highlighting */
.order-row:has(.order-checkbox:checked) {
    background-color: rgba(35, 134, 54, 0.1) !important;
    border-left: 3px solid var(--accent-primary);
}

/* Checkbox styling */
.form-check-input:checked {
    background-color: var(--accent-primary);
    border-color: var(--accent-primary);
}

.form-check-input:focus {
    box-shadow: 0 0 0 0.25rem rgba(35, 134, 54, 0.25);
}

/* Pagination styling */
.pagination-sm .page-link {
    background: var(--surface-secondary);
    border-color: var(--border-default);
    color: var(--text-primary);
}

.pagination-sm .page-link:hover {
    background: var(--surface-tertiary);
    border-color: var(--accent-primary);
    color: var(--accent-primary);
}

.pagination-sm .page-item.active .page-link {
    background: var(--accent-primary);
    border-color: var(--accent-primary);
}

.pagination-sm .page-item.disabled .page-link {
    background: var(--surface-secondary);
    border-color: var(--border-muted);
    color: var(--text-muted);
}

/* Font monospace for order IDs */
.font-monospace {
    font-family: 'Courier New', monospace;
    letter-spacing: 0.5px;
}

/* Orders table container styling */
.orders-table-container {
    min-height: 400px; /* Reasonable minimum height for dropdowns without excessive scrolling */
    position: relative;
}

.orders-table-container .table {
    margin-bottom: 0;
}

/* Ensure dropdown menus don't cause scrolling */
.dropdown-menu {
    position: absolute;
    z-index: 1050;
    max-height: 300px;
    overflow-y: auto;
    /* Hide scrollbar while maintaining functionality */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* Internet Explorer and Edge */
}

/* Hide scrollbar for Chrome, Safari and Opera */
.dropdown-menu::-webkit-scrollbar {
    display: none;
}

/* Table wrapper to handle overflow properly */
.data-table {
    position: relative;
    background: var(--surface-secondary);
    border: 1px solid var(--border-default);
    border-radius: 12px;
    box-shadow: var(--shadow);
    overflow: hidden;
}

.table-header {
    background-color: var(--surface-tertiary);
    border-bottom: 1px solid var(--border-default);
    padding: 1rem 1.5rem;
    margin: 0;
    font-weight: 600;
    color: var(--text-primary);
}

/* Empty state styling */
.orders-table-container .text-center {
    min-height: 350px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* Responsive bulk actions */
@media (max-width: 768px) {
    .bulk-actions-toolbar .d-flex {
        flex-direction: column;
        align-items: stretch !important;
    }

    .bulk-actions-buttons {
        margin-top: 1rem;
        justify-content: center;
    }

    .bulk-actions-buttons .btn {
        flex: 1;
        min-width: 120px;
    }

    .table-responsive {
        font-size: 0.875rem;
    }

    .order-row .fw-bold {
        font-size: 0.8rem;
    }

    .order-row small {
        font-size: 0.7rem;
    }

    /* Reduce minimum height on mobile */
    .orders-table-container {
        min-height: 50vh;
    }

    .orders-table-container .text-center {
        min-height: 40vh;
    }
}

/* Ensure proper spacing for dropdown overlays */
.btn-group {
    position: relative;
}

.dropdown-toggle::after {
    margin-left: 0.5em;
}
</style>

<%
# Helper method for building pagination URLs with current filters
def build_pagination_url(page)
  params_copy = params.dup
  params_copy['page'] = page.to_s
  params_copy.delete('page') if page == 1

  query_string = params_copy.reject { |k, v| v.nil? || v.empty? }
                           .map { |k, v| "#{k}=#{CGI.escape(v.to_s)}" }
                           .join('&')

  query_string.empty? ? request.path : "#{request.path}?#{query_string}"
end
%>
